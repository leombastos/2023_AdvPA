---
title: "USDA NASS Soybeans data"
subtitle: "Numerical and graphical summaries"
author: "All of us"
format:
  html:
    code-fold: true
    embed-resources: true
    toc: true
    number-sections: true
    theme: cerulean
    #cerulean, journal, quartz, sketchy, slate, morph, superhero, vapor
knitr: 
  opts_chunk: 
    message: false
    warning: false
---

# Introduction  
This report was developed to explore, through **tables and plots**, USDA NASS data for **soybeans production at the county level for all years available**.  

The raw data was downloaded from [USDA NASS QuickStats portal](https://quickstats.nass.usda.gov).  

# Setup  
## Loading packages  
```{r }
#install.packages('dlookr')

library(tidyverse)
library(readxl)
library(dlookr)
library(janitor)
library(ggthemes)

```

## Importing data  
```{r soy}
soy <- read_csv("../data/soybeans_nass.csv")
```

# EDA  
## Print `soy`  
```{r}
soy
```

## `soy` summary  
```{r }
summary(soy)
```

## Exploring column classes and distinct cases  
```{r }
soy %>%
  diagnose() 
```

```{r}
soy %>%
  #distinct(Program)
  group_by(Program) %>%
  tally()
```

For a list of abbreviations found in NASS data sets, click [here](https://quickstats.nass.usda.gov/src/glossary.pdf).  


# Wrangling  
```{r soy_w}
soy_w <- soy %>%
  clean_names() %>%
  # Keeping only survey data 
  filter(program == "SURVEY") %>%
  # Selecting desired variables
  dplyr::select(year, 
                county, 
                prod_bu=value) %>%
  # Replacing (D) for NA in prod_bu
  mutate(prod_bu = ifelse(prod_bu == "(D)", 
                          NA, 
                          prod_bu)) %>%
  # Removing , from prod_bu
  mutate(prod_bu = str_remove(prod_bu, ",")) %>%
  # Transforming prod_bu from character to numeric
  mutate(prod_bu = as.numeric(prod_bu)) %>%
  # Transforming production from bu to million bu
  mutate(prod_mibu = prod_bu/1000000)

soy_w
```

# EDA round 2  
## Plot production distribution  

```{r }
ggplot(soy_w, aes(x = prod_mibu))+
  geom_density()
```
Where does most of the production is distributed (eye-ball where the peak of the plot above is on the x-axis)?  

## Plot production distribution by year  

```{r }
ggplot(soy_w, aes(x = year, 
                  y = prod_mibu, 
                  group = year))+
  geom_boxplot()
```
On same year, some counties produced near zero while others producer a lot more (~ 1 million bushels).   

## Plot production distribution by year and county  
```{r }
ggplot(soy_w, aes(x = year,
                  y = prod_mibu,
                  color = county
))+
  geom_line(show.legend = F)

```
Kind of messy to make sense, too many lines (one for each county).    

## Table with highest production  

What was the highest production record of any county across all years? When did it happen and which county reported it?  

```{r }
soy_w %>%
  filter(prod_mibu == max(prod_mibu, 
                          na.rm = T))
```

## Table with lowest production   
What was the lowest production record of any county across all years? When did it happen and which county reported it?  


```{r }
soy_w %>%
  filter(county != "OTHER (COMBINED) COUNTIES") %>%
  filter(prod_mibu == min(prod_mibu, 
                          na.rm = T))
```
At an average yield of 50 bu/ac, Glascock county would've only needed 1 field of 10 ac to make this cut. That's really not much at all.  

## Plot the average county production for each year  
```{r }
soy_w %>%
  group_by(year) %>%
  summarise(meanprod = mean(prod_mibu, na.rm = T)) %>%
  ggplot(aes(x= year,
             y = meanprod))+
  geom_line()

```

## What was the latest year reported?  
```{r}
soy_w %>%
  distinct(year) %>%
  arrange(desc(year))
```

## What was the highest production in 2021?  
```{r}
soy_w %>%
  filter(year == 2021) %>%
  arrange(desc(prod_mibu))
```

## Plot production over time for the highest producing county in 2021  

```{r}
soy_w %>%
  filter(county == "BROOKS") %>%
  ggplot(aes(x = year, 
             y = prod_mibu))+
  geom_line()
```

## What was the lowest production in 2021?  
```{r}
soy_w %>%
  filter(year == 2021) %>%
  arrange(prod_mibu)
```

## Plot production over time for the lowest producing county in 2021  

```{r}
soy_w %>%
  filter(county == "BACON") %>%
  ggplot(aes(x = year, 
             y = prod_mibu))+
  geom_line()
```

## Plot production over time for both of these counties above  
```{r}
soy_w %>%
  filter(county %in% c("BROOKS", 
                       "BACON")) %>%
  ggplot(aes(x = year,
             y = prod_mibu,
             color = county
             ))+
  geom_line()
```
## Plot the state total production on each year 
```{r }
soy_w %>%
  group_by(year) %>%
  summarise(totalprod = sum(prod_mibu, 
                            na.rm = T)) %>%
  ggplot(aes(x= year,
             y = totalprod))+
  
  geom_line()

```
## Final: make the plot above publication-ready  

```{r }
soy_w %>%
  group_by(year) %>%
  summarise(totalprod = sum(prod_mibu, 
                            na.rm = T)) %>%
  ggplot(aes(x= year,
             y = totalprod))+
  
  geom_line(color = "blue")+
  labs(x = "Year",
       y = "State-level production (million bu)")+
  scale_x_continuous(breaks = seq(1960, 2021,10))+
  theme_economist()


```
# Exporting  
```{r}
write_csv(soy_w,
          "../data/soybeans_nass_processed.csv")
```


